pipeline {

    agent any

    options {
      ansiColor('xterm')
    }

    stages {

        stage('Clona repositorio') {
            steps {
                git branch: 'main', url: 'https://github.com/HugoAquinoNavarrete/ansible_scripting'
            }
        }
        
        stage('Copia llave e inventarios del pipeline-05') {
            steps {
                sh 'cp ../pipeline-05/${nombre_llave} .'
                sh 'cp ../pipeline-05/ansible_inventario.txt .'
                sh 'cp ../pipeline-05/ansible_inventario_win.txt .'
            }
        }
        
        stage('Lista archivos del repositorio clonado') {
            when {
                equals expected: "lista_archivos", actual: "${accion}"
            }
            steps {
                sh 'ls -l'
                sh 'cat ansible_inventario.txt'
                sh 'cat ansible_inventario_win.txt'
            }
        }
        
        stage('Haz ping con Ansible a las VMs creadas') {
            when {
                equals expected: "haz_ping", actual: "${accion}"
            }
            steps {
                sh '/bin/bash ./bin/01-ping.sh ${nombre_llave}'
                sh '/bin/bash ./bin/01-ping_win.sh ${nombre_llave}'
            }
        }
        
        stage('Imprime mensaje con Ansible a las VMs Ubuntu creadas') {
            when {
                equals expected: "imprime_mensaje_ubuntu", actual: "${accion}"
            }
            
            steps {
                sh '/bin/bash ./bin/02-mensaje.sh ${nombre_llave}'
            }
        }

        stage('Imprime mensaje con Ansible a las VMs Windows creadas') {
            when {
                equals expected: "imprime_mensaje_windows", actual: "${accion}"
            }

            steps {
                sh '/bin/bash ./bin/02-mensaje_win.sh ${nombre_llave}'
            }
        }
        
    }    
}

